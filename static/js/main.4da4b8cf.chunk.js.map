{"version":3,"sources":["Context.js","components/Contact/Contact.js","components/Contacts/Contacts.js","components/About/About.js","components/Header/Header.js","components/NotFound/NotFound.js","components/test/Test.js","components/TextInputGroup/TextInputGroup.js","components/AddContact/AddContact.js","components/EditContact/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDelete","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","defaultProps","Contacts","Fragment","key","About","data-testid","Header","branding","href","NotFound","Test","title","body","fetch","then","response","json","console","log","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onFormSubmit","e","preventDefault","newContact","post","history","push","onFieldChange","target","onSubmit","EditContact","updatedContact","match","params","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4da4b8cf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Contact.css\";\nimport axios from \"axios\";\n\nimport { Consumer } from \"../../Context\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDelete = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                ></i>\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDelete.bind(this, id, dispatch)}\n                ></i>\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <div>\n                  <ul className=\"list-group\">\n                    <li className=\"list-group-item\">Email: {email}</li>\n                    <li className=\"list-group-item\">Phone: {phone}</li>\n                  </ul>\n                </div>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nContact.defaultProps = {};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"../Contact/Contact\";\nimport PropTypes from \"prop-types\";\nimport \"./Contacts.css\";\n\nimport { Consumer } from \"../../Context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span>List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContacts.propTypes = {};\n\nContacts.defaultProps = {};\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./About.css\";\n\nconst About = () => (\n  <div className=\"About\" data-testid=\"About\">\n    <h1 className=\"display-4\">About Contact Manager</h1>\n    <p className=\"lead\">Simple app to manage contacts</p>\n    <p className=\"text-secondary\">Version 1.0.0</p>\n  </div>\n);\n\nAbout.propTypes = {};\n\nAbout.defaultProps = {};\n\nexport default About;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Header.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i>Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"></i>Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"></i>About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./NotFound.css\";\n\nconst NotFound = () => (\n  <div className=\"NotFound\" data-testid=\"NotFound\">\n    <h1 className=\"display-4\">\n      <span className=\"text-danger\">404</span> Page Not Found\n    </h1>\n    <p className=\"lead\">Sorry, that page does not exist.</p>\n  </div>\n);\n\nNotFound.propTypes = {};\n\nNotFound.defaultProps = {};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\n\nexport default class Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ title: data.title, body: data.body });\n      });\n  }\n\n  // When component receives new props, this will run\n  // Used: with Redux\n  // componentWillReceiveProps(nextProps, nextState) {\n  //   console.log(\"Component will receive new Props...\");\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./TextInputGroup.css\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-message\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport \"./AddContact.css\";\nimport { Consumer } from \"../../Context\";\nimport TextInputGroup from \"../TextInputGroup/TextInputGroup\";\nimport axios from \"axios\";\n\nexport default class AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onFormSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    // Clear the form (and state) after submitting\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    });\n\n    // Navigate to Home Screen\n    this.props.history.push(\"/\");\n  };\n\n  onFieldChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onFormSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onFieldChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"ex. pap@gmail.com\"\n                    value={email}\n                    onChange={this.onFieldChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onFieldChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-dark btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport TextInputGroup from \"../TextInputGroup/TextInputGroup\";\nimport axios from \"axios\";\n\nexport default class EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onFormSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const updatedContact = {\n      name,\n      email,\n      phone\n    };\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updatedContact\n    );\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    // Clear the form (and state) after submitting\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    });\n\n    // Navigate to Home Screen\n    this.props.history.push(\"/\");\n  };\n\n  onFieldChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onFormSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onFieldChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"ex. pap@gmail.com\"\n                    value={email}\n                    onChange={this.onFieldChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onFieldChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-dark btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport About from \"./components/About/About\";\nimport Header from \"./components/Header/Header\";\nimport NotFound from \"./components/NotFound/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Provider } from \"./Context\";\nimport AddContact from \"./components/AddContact/AddContact\";\nimport EditContact from \"./components/EditContact/EditContact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}